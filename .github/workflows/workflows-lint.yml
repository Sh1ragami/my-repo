name: "GitHub Actions Workflow Lint"

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - ".github/workflows/**"

permissions:
  contents: read
  checks: write

concurrency:
  group: workflows-quality-${{ github.ref }}
  cancel-in-progress: true

jobs:
  workflow-lint:
    name: Lint GitHub Workflows
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Harden runner egress
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Check for .yml files
        shell: bash
        run: |
          echo "::group::Scan '.yml' in .github/workflows"
          set -eo pipefail
          mapfile -t ymls < <(find .github/workflows -type f -name "*.yml" | sort || true)
          if (( ${#ymls[@]} > 0 )); then
            for file in "${ymls[@]}"; do
              printf '::warning file=%s,title=Invalid Extension::The file "%s" should be renamed to ".yaml".\n' "$file" "$file"
            done
          else
            echo "All good: only .yaml files are present."
          fi
          echo "::endgroup::"

      - name: Run actionlint
        uses: rhysd/actionlint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run ghalint
        uses: koki-develop/github-actions-lint/ghalint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          tool_name: "ghalint"
          level: error

      - name: Run zizmor
        uses: koki-develop/github-actions-lint/zizmor@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          tool_name: "zizmor"
          persona: auditor

      - name: policy checks
        shell: bash
        run: |
          echo "::group::Policy checks"
          exitcode=0
          shopt -s nullglob
          for wf in .github/workflows/*.yml .github/workflows/*.yaml; do
            echo "Checking $wf"
            if grep -Eiq 'password|secret|token' "$wf"; then
              echo "⚠️  Potential secret-like string in $wf (use \${{ secrets.* }})"
            fi
            if grep -Eq 'uses:.*@(?:main|master)\b' "$wf"; then
              echo "❌  Unpinned action ref (@main/@master) found in $wf"
              exitcode=1
            fi
          done
          echo "::endgroup::"
          exit $exitcode
